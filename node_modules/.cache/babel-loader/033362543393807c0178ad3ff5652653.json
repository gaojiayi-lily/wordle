{"ast":null,"code":"var _jsxFileName = \"/Users/lilygao/Desktop/CS 5610/MA2/project2/jiayi-gao-project2/src/component/Key.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { setState, useContext } from 'react';\nimport { EasyContext } from './Easy.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Key(_ref) {\n  _s();\n\n  let {\n    keyVal,\n    letterLength\n  } = _ref;\n  const {\n    board,\n    setBoard,\n    currTry,\n    setCurrTry\n  } = useContext(EasyContext);\n\n  const selectLetter = () => {\n    if (keyVal === \"ENTER\") {\n      if (currTry.letterPos !== letterLength) {\n        return;\n      }\n\n      setCurrTry({\n        noOfAttempt: currTry.noOfAttempt + 1,\n        letterPos: 0\n      });\n    } else if (keyVal === \"DELETE\") {\n      if (currTry.letterPos === 0) {\n        return;\n      }\n\n      const newBoard = [...board];\n      newBoard[currTry.noOfAttempt][currTry.letterPos - 1] = \"\";\n      setBoard(newBoard);\n      setCurrTry({ ...currTry,\n        letterPos: currTry.letterPos - 1\n      });\n    } else {\n      if (currTry.letterPos >= letterLength) {\n        return;\n      }\n\n      const newBoard = [...board];\n      newBoard[currTry.noOfAttempt][currTry.letterPos] = keyVal;\n      setBoard(newBoard);\n      setCurrTry({ ...currTry,\n        letterPos: currTry.letterPos + 1\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: selectLetter,\n      children: keyVal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Key, \"UxTCTVzWsX8OqMw4bnt7JzgXjO0=\");\n\n_c = Key;\n\nvar _c;\n\n$RefreshReg$(_c, \"Key\");","map":{"version":3,"sources":["/Users/lilygao/Desktop/CS 5610/MA2/project2/jiayi-gao-project2/src/component/Key.jsx"],"names":["React","setState","useContext","EasyContext","Key","keyVal","letterLength","board","setBoard","currTry","setCurrTry","selectLetter","letterPos","noOfAttempt","newBoard"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAAQC,WAAR,QAA0B,YAA1B;;AAEA,eAAe,SAASC,GAAT,OAAqC;AAAA;;AAAA,MAAxB;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAwB;AAEhD,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA;AAA5B,MAA2CR,UAAU,CAACC,WAAD,CAA3D;;AAEA,QAAMQ,YAAY,GAAG,MAAM;AACvB,QAAIN,MAAM,KAAK,OAAf,EAAwB;AACpB,UAAII,OAAO,CAACG,SAAR,KAAsBN,YAA1B,EAAwC;AACpC;AACH;;AACDI,MAAAA,UAAU,CAAC;AAACG,QAAAA,WAAW,EAAEJ,OAAO,CAACI,WAAR,GAAsB,CAApC;AAAuCD,QAAAA,SAAS,EAAE;AAAlD,OAAD,CAAV;AACH,KALD,MAKO,IAAIP,MAAM,KAAK,QAAf,EAAyB;AAC5B,UAAII,OAAO,CAACG,SAAR,KAAsB,CAA1B,EAA6B;AACzB;AACH;;AACD,YAAME,QAAQ,GAAG,CAAC,GAAGP,KAAJ,CAAjB;AACAO,MAAAA,QAAQ,CAACL,OAAO,CAACI,WAAT,CAAR,CAA8BJ,OAAO,CAACG,SAAR,GAAoB,CAAlD,IAAuD,EAAvD;AACAJ,MAAAA,QAAQ,CAACM,QAAD,CAAR;AACAJ,MAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaG,QAAAA,SAAS,EAAEH,OAAO,CAACG,SAAR,GAAoB;AAA5C,OAAD,CAAV;AACH,KARM,MAQA;AACH,UAAIH,OAAO,CAACG,SAAR,IAAqBN,YAAzB,EAAuC;AACnC;AACH;;AACD,YAAMQ,QAAQ,GAAG,CAAC,GAAGP,KAAJ,CAAjB;AACAO,MAAAA,QAAQ,CAACL,OAAO,CAACI,WAAT,CAAR,CAA8BJ,OAAO,CAACG,SAAtC,IAAmDP,MAAnD;AACAG,MAAAA,QAAQ,CAACM,QAAD,CAAR;AACAJ,MAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaG,QAAAA,SAAS,EAAEH,OAAO,CAACG,SAAR,GAAoB;AAA5C,OAAD,CAAV;AACH;AACJ,GAvBD;;AAyBA,sBACI;AAAA,2BACI;AAAK,MAAA,OAAO,EAAID,YAAhB;AAAA,gBACKN;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GArCuBD,G;;KAAAA,G","sourcesContent":["import React, {setState, useContext} from 'react';\nimport {EasyContext} from './Easy.jsx';\n\nexport default function Key({keyVal, letterLength}) {\n\n    const { board, setBoard, currTry, setCurrTry } = useContext(EasyContext);\n\n    const selectLetter = () => {\n        if (keyVal === \"ENTER\") {\n            if (currTry.letterPos !== letterLength) {\n                return;\n            }\n            setCurrTry({noOfAttempt: currTry.noOfAttempt + 1, letterPos: 0});\n        } else if (keyVal === \"DELETE\") {\n            if (currTry.letterPos === 0) {\n                return;\n            }\n            const newBoard = [...board];\n            newBoard[currTry.noOfAttempt][currTry.letterPos - 1] = \"\";\n            setBoard(newBoard);\n            setCurrTry({...currTry, letterPos: currTry.letterPos - 1})\n        } else {\n            if (currTry.letterPos >= letterLength) {\n                return;\n            }\n            const newBoard = [...board];\n            newBoard[currTry.noOfAttempt][currTry.letterPos] = keyVal;\n            setBoard(newBoard);\n            setCurrTry({...currTry, letterPos: currTry.letterPos + 1})\n        }\n    }\n\n    return (\n        <div>\n            <div onClick = {selectLetter}>\n                {keyVal}\n            </div>\n        </div>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}