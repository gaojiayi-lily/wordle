{"ast":null,"code":"var _jsxFileName = \"/Users/lilygao/Desktop/CS 5610/MA2/project2/jiayi-gao-project2/src/component/Keyboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useCallback } from 'react';\nimport Key from './Key.jsx';\nimport { EasyContext } from './Easy.jsx';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Keyboard() {\n  _s();\n\n  const {\n    board,\n    setBoard,\n    currTry,\n    setCurrTry,\n    setSentense,\n    wordSet,\n    correctWord,\n    gameOver,\n    setGameOver\n  } = useContext(EasyContext);\n  const keys1 = [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"];\n  const keys2 = [\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"];\n  const keys3 = [\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"];\n  const letterLength = 5;\n  const maxAttempt = 7;\n\n  const onSelectLetter = keyVal => {\n    if (currTry.letterPos >= letterLength) {\n      setSentense(\"The Word is too long, honey :)\");\n      return;\n    }\n\n    setSentense(\"Everything looks good :)\");\n    const newBoard = [...board];\n    newBoard[currTry.noOfAttempt][currTry.letterPos] = keyVal;\n    setBoard(newBoard);\n    setCurrTry({ ...currTry,\n      letterPos: currTry.letterPos + 1\n    });\n  };\n\n  const handleKeyboard = useCallback(event => {\n    if (event.key === \"Enter\") {\n      if (currTry.letterPos !== letterLength) {\n        setSentense(\"The Word is too short, honey :)\");\n        return;\n      }\n\n      setSentense(\"Everything looks good :)\");\n      let currWord = \"\";\n\n      for (let i = 0; i < letterLength; i++) {\n        currWord += board[currTry.noOfAttempt][i];\n      }\n\n      if (wordSet.has(currWord.toLowerCase())) {\n        setCurrTry({\n          noOfAttempt: currTry.noOfAttempt + 1,\n          letterPos: 0\n        });\n      } else {\n        alert(\"not found\");\n      }\n\n      if (currTry.noOfAttempt === maxAttempt) {\n        setGameOver({\n          gameOver: true,\n          guessSuccess: false\n        });\n        return;\n      }\n\n      if (currWord === correctWord) {\n        setGameOver({\n          gameOver: true,\n          guessSuccess: true\n        });\n        return;\n      }\n    } else if (event.key === \"Backspace\") {\n      if (currTry.letterPos === 0) {\n        setSentense(\"You cannot delete empty item.\");\n        return;\n      }\n\n      setSentense(\"Everything looks good :)\");\n      const newBoard = [...board];\n      newBoard[currTry.noOfAttempt][currTry.letterPos - 1] = \"\";\n      setBoard(newBoard);\n      setCurrTry({ ...currTry,\n        letterPos: currTry.letterPos - 1\n      });\n    } else {\n      keys1.forEach(key => {\n        if (event.key.toLowerCase() === key.toLowerCase()) {\n          onSelectLetter(key);\n        }\n      });\n      keys2.forEach(key => {\n        if (event.key.toLowerCase() === key.toLowerCase()) {\n          onSelectLetter(key);\n        }\n      });\n      keys3.forEach(key => {\n        if (event.key.toLowerCase() === key.toLowerCase()) {\n          onSelectLetter(key);\n        }\n      });\n    }\n  });\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyboard);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyboard);\n    };\n  }, [handleKeyboard]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"keyboard\",\n    onKeyDown: handleKeyboard,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line1\",\n      children: keys1.map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"key\",\n          children: /*#__PURE__*/_jsxDEV(Key, {\n            keyVal: key,\n            letterLength: letterLength\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line2\",\n      children: keys2.map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"key\",\n          children: /*#__PURE__*/_jsxDEV(Key, {\n            keyVal: key,\n            letterLength: letterLength\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"key\",\n        id: \"big\",\n        children: /*#__PURE__*/_jsxDEV(Key, {\n          keyVal: \"ENTER\",\n          letterLength: letterLength\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), keys3.map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"key\",\n          children: /*#__PURE__*/_jsxDEV(Key, {\n            keyVal: key,\n            letterLength: letterLength\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"key\",\n        id: \"big\",\n        children: /*#__PURE__*/_jsxDEV(Key, {\n          keyVal: \"DELETE\",\n          letterLength: letterLength\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Keyboard, \"9kCbHk9dTBYBgzxq1tnuCy1in/A=\");\n\n_c = Keyboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"sources":["/Users/lilygao/Desktop/CS 5610/MA2/project2/jiayi-gao-project2/src/component/Keyboard.jsx"],"names":["React","useContext","useEffect","useCallback","Key","EasyContext","Keyboard","board","setBoard","currTry","setCurrTry","setSentense","wordSet","correctWord","gameOver","setGameOver","keys1","keys2","keys3","letterLength","maxAttempt","onSelectLetter","keyVal","letterPos","newBoard","noOfAttempt","handleKeyboard","event","key","currWord","i","has","toLowerCase","alert","guessSuccess","forEach","document","addEventListener","removeEventListener","map"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useCallback} from 'react';\nimport Key from './Key.jsx';\nimport {EasyContext} from './Easy.jsx';\nimport '../App.css';\n\nexport default function Keyboard() {\n\n    const { board, setBoard, \n        currTry, setCurrTry, \n        setSentense, \n        wordSet, correctWord, \n        gameOver, setGameOver} \n        = useContext(EasyContext);\n\n    const keys1 = [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"];\n    const keys2 = [\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"];\n    const keys3 = [\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"];\n    const letterLength = 5;\n    const maxAttempt = 7;\n\n    const onSelectLetter = ((keyVal) => {\n        if (currTry.letterPos >= letterLength) {\n            setSentense(\"The Word is too long, honey :)\")\n            return;\n        }\n        setSentense(\"Everything looks good :)\");\n        const newBoard = [...board];\n        newBoard[currTry.noOfAttempt][currTry.letterPos] = keyVal;\n        setBoard(newBoard);\n        setCurrTry({...currTry, letterPos: currTry.letterPos + 1})\n    });\n\n    const handleKeyboard = useCallback((event) => {\n        if (event.key === \"Enter\") {\n            if (currTry.letterPos !== letterLength) {\n                setSentense(\"The Word is too short, honey :)\")\n                return;\n            }\n            setSentense(\"Everything looks good :)\");\n\n            let currWord = \"\";\n            for (let i = 0; i < letterLength; i++) {\n                currWord += board[currTry.noOfAttempt][i];\n            }\n\n            if (wordSet.has(currWord.toLowerCase())) {\n                setCurrTry({noOfAttempt: currTry.noOfAttempt + 1, letterPos: 0});\n            } else {\n                alert(\"not found\");\n            }\n\n            if (currTry.noOfAttempt === maxAttempt) {\n                setGameOver({\n                    gameOver: true,\n                    guessSuccess: false,\n                })\n                return;\n            }\n\n            if (currWord === correctWord) {\n                setGameOver({\n                    gameOver: true,\n                    guessSuccess: true,\n                })\n                return;\n            }\n\n        } else if (event.key === \"Backspace\") {\n            if (currTry.letterPos === 0) {\n                setSentense(\"You cannot delete empty item.\")\n                return;\n            }\n            setSentense(\"Everything looks good :)\");\n            const newBoard = [...board];\n            newBoard[currTry.noOfAttempt][currTry.letterPos - 1] = \"\";\n            setBoard(newBoard);\n            setCurrTry({...currTry, letterPos: currTry.letterPos - 1})\n\n        } else {\n            keys1.forEach((key) => {\n                if (event.key.toLowerCase() === key.toLowerCase()) {\n                    onSelectLetter(key);\n                }\n            })\n            keys2.forEach((key) => {\n                if (event.key.toLowerCase() === key.toLowerCase()) {\n                    onSelectLetter(key);\n                }\n            })\n            keys3.forEach((key) => {\n                if (event.key.toLowerCase() === key.toLowerCase()) {\n                    onSelectLetter(key);\n                }\n            })\n        }\n    }) \n\n    useEffect(() => {\n        document.addEventListener(\"keydown\", handleKeyboard);\n\n        return () => {\n            document.removeEventListener(\"keydown\", handleKeyboard);\n        }\n    }, [handleKeyboard])\n\n    return (\n        <div className = \"keyboard\" onKeyDown = {handleKeyboard}> \n            <div className = \"line1\">\n                {keys1.map((key) => {\n                    return (\n                    <div className = \"key\"> \n                        <Key keyVal = {key} letterLength = {letterLength}/>\n                    </div>)\n                })}\n            </div>\n            <div className = \"line2\">\n                {keys2.map((key) => {\n                    return (\n                    <div className = \"key\"> \n                        <Key keyVal = {key} letterLength = {letterLength}/>\n                    </div>)\n                })}\n            </div>\n            <div className = \"line3\">\n                <div className = \"key\" id = \"big\"> \n                    <Key keyVal = \"ENTER\" letterLength = {letterLength}/> \n                </div>\n                {keys3.map((key) => {\n                    return (\n                    <div className = \"key\"> \n                        <Key keyVal = {key} letterLength = {letterLength}/>\n                    </div>)\n                })}\n                <div className = \"key\" id = \"big\"> \n                    <Key keyVal = \"DELETE\" letterLength = {letterLength}/> \n                </div>\n            </div>\n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}