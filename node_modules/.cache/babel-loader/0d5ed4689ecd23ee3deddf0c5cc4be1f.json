{"ast":null,"code":"var _jsxFileName = \"/Users/lilygao/Desktop/CS 5610/MA2/project2/jiayi-gao-project2/src/component/Key.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { EasyContext } from './Easy.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Key(_ref) {\n  _s();\n\n  let {\n    keyVal,\n    letterLength\n  } = _ref;\n  const {\n    board,\n    setBoard,\n    currTry,\n    setCurrTry,\n    setSentense\n  } = useContext(EasyContext);\n\n  const selectLetter = () => {\n    if (keyVal === \"ENTER\") {\n      if (currTry.letterPos !== letterLength) {\n        setSentense(\"The Word is too short, honey :)\");\n        return;\n      }\n\n      setSentense(\"Everything looks good :)\");\n      let currWord = \"\";\n\n      for (let i = 0; i < letterLength; i++) {\n        currWord += board[currTry.noOfAttempt][i];\n      }\n\n      if (wordSet.has(currWord.toLowerCase())) {\n        setCurrTry({\n          noOfAttempt: currTry.noOfAttempt + 1,\n          letterPos: 0\n        });\n      } else {\n        alert(\"not found\");\n      }\n    } else if (keyVal === \"DELETE\") {\n      if (currTry.letterPos === 0) {\n        setSentense(\"You cannot delete empty item.\");\n        return;\n      }\n\n      setSentense(\"Everything looks good :)\");\n      const newBoard = [...board];\n      newBoard[currTry.noOfAttempt][currTry.letterPos - 1] = \"\";\n      setBoard(newBoard);\n      setCurrTry({ ...currTry,\n        letterPos: currTry.letterPos - 1\n      });\n    } else {\n      if (currTry.letterPos >= letterLength) {\n        setSentense(\"The Word is too long, honey :)\");\n        return;\n      }\n\n      setSentense(\"Everything looks good :)\");\n      const newBoard = [...board];\n      newBoard[currTry.noOfAttempt][currTry.letterPos] = keyVal;\n      setBoard(newBoard);\n      setCurrTry({ ...currTry,\n        letterPos: currTry.letterPos + 1\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: selectLetter,\n      children: keyVal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Key, \"yklT+/upjHz5hLFoX0V1gp4srgo=\");\n\n_c = Key;\n\nvar _c;\n\n$RefreshReg$(_c, \"Key\");","map":{"version":3,"sources":["/Users/lilygao/Desktop/CS 5610/MA2/project2/jiayi-gao-project2/src/component/Key.jsx"],"names":["React","useContext","EasyContext","Key","keyVal","letterLength","board","setBoard","currTry","setCurrTry","setSentense","selectLetter","letterPos","currWord","i","noOfAttempt","wordSet","has","toLowerCase","alert","newBoard"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,WAAR,QAA0B,YAA1B;;AAEA,eAAe,SAASC,GAAT,OAAqC;AAAA;;AAAA,MAAxB;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAwB;AAEhD,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,UAA5B;AAAwCC,IAAAA;AAAxC,MAAwDT,UAAU,CAACC,WAAD,CAAxE;;AAEA,QAAMS,YAAY,GAAG,MAAM;AACvB,QAAIP,MAAM,KAAK,OAAf,EAAwB;AACpB,UAAII,OAAO,CAACI,SAAR,KAAsBP,YAA1B,EAAwC;AACpCK,QAAAA,WAAW,CAAC,iCAAD,CAAX;AACA;AACH;;AACDA,MAAAA,WAAW,CAAC,0BAAD,CAAX;AAEA,UAAIG,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,YAApB,EAAkCS,CAAC,EAAnC,EAAuC;AACnCD,QAAAA,QAAQ,IAAIP,KAAK,CAACE,OAAO,CAACO,WAAT,CAAL,CAA2BD,CAA3B,CAAZ;AACH;;AAED,UAAIE,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,WAAT,EAAZ,CAAJ,EAAyC;AACrCT,QAAAA,UAAU,CAAC;AAACM,UAAAA,WAAW,EAAEP,OAAO,CAACO,WAAR,GAAsB,CAApC;AAAuCH,UAAAA,SAAS,EAAE;AAAlD,SAAD,CAAV;AACH,OAFD,MAEO;AACHO,QAAAA,KAAK,CAAC,WAAD,CAAL;AACH;AAEJ,KAlBD,MAkBO,IAAIf,MAAM,KAAK,QAAf,EAAyB;AAC5B,UAAII,OAAO,CAACI,SAAR,KAAsB,CAA1B,EAA6B;AACzBF,QAAAA,WAAW,CAAC,+BAAD,CAAX;AACA;AACH;;AACDA,MAAAA,WAAW,CAAC,0BAAD,CAAX;AACA,YAAMU,QAAQ,GAAG,CAAC,GAAGd,KAAJ,CAAjB;AACAc,MAAAA,QAAQ,CAACZ,OAAO,CAACO,WAAT,CAAR,CAA8BP,OAAO,CAACI,SAAR,GAAoB,CAAlD,IAAuD,EAAvD;AACAL,MAAAA,QAAQ,CAACa,QAAD,CAAR;AACAX,MAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaI,QAAAA,SAAS,EAAEJ,OAAO,CAACI,SAAR,GAAoB;AAA5C,OAAD,CAAV;AAEH,KAXM,MAWA;AACH,UAAIJ,OAAO,CAACI,SAAR,IAAqBP,YAAzB,EAAuC;AACnCK,QAAAA,WAAW,CAAC,gCAAD,CAAX;AACA;AACH;;AACDA,MAAAA,WAAW,CAAC,0BAAD,CAAX;AACA,YAAMU,QAAQ,GAAG,CAAC,GAAGd,KAAJ,CAAjB;AACAc,MAAAA,QAAQ,CAACZ,OAAO,CAACO,WAAT,CAAR,CAA8BP,OAAO,CAACI,SAAtC,IAAmDR,MAAnD;AACAG,MAAAA,QAAQ,CAACa,QAAD,CAAR;AACAX,MAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaI,QAAAA,SAAS,EAAEJ,OAAO,CAACI,SAAR,GAAoB;AAA5C,OAAD,CAAV;AAEH;AACJ,GA1CD;;AA4CA,sBACI;AAAA,2BACI;AAAK,MAAA,OAAO,EAAID,YAAhB;AAAA,gBACKP;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAxDuBD,G;;KAAAA,G","sourcesContent":["import React, {useContext} from 'react';\nimport {EasyContext} from './Easy.jsx';\n\nexport default function Key({keyVal, letterLength}) {\n\n    const { board, setBoard, currTry, setCurrTry, setSentense } = useContext(EasyContext);\n\n    const selectLetter = () => {\n        if (keyVal === \"ENTER\") {\n            if (currTry.letterPos !== letterLength) {\n                setSentense(\"The Word is too short, honey :)\")\n                return;\n            }\n            setSentense(\"Everything looks good :)\");\n\n            let currWord = \"\";\n            for (let i = 0; i < letterLength; i++) {\n                currWord += board[currTry.noOfAttempt][i];\n            }\n\n            if (wordSet.has(currWord.toLowerCase())) {\n                setCurrTry({noOfAttempt: currTry.noOfAttempt + 1, letterPos: 0});\n            } else {\n                alert(\"not found\");\n            }\n\n        } else if (keyVal === \"DELETE\") {\n            if (currTry.letterPos === 0) {\n                setSentense(\"You cannot delete empty item.\")\n                return;\n            }\n            setSentense(\"Everything looks good :)\");\n            const newBoard = [...board];\n            newBoard[currTry.noOfAttempt][currTry.letterPos - 1] = \"\";\n            setBoard(newBoard);\n            setCurrTry({...currTry, letterPos: currTry.letterPos - 1})\n\n        } else {\n            if (currTry.letterPos >= letterLength) {\n                setSentense(\"The Word is too long, honey :)\")\n                return;\n            }\n            setSentense(\"Everything looks good :)\");\n            const newBoard = [...board];\n            newBoard[currTry.noOfAttempt][currTry.letterPos] = keyVal;\n            setBoard(newBoard);\n            setCurrTry({...currTry, letterPos: currTry.letterPos + 1})\n            \n        }\n    }\n\n    return (\n        <div>\n            <div onClick = {selectLetter}>\n                {keyVal}\n            </div>\n        </div>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}