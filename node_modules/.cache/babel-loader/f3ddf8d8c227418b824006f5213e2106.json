{"ast":null,"code":"var _jsxFileName = \"/Users/lilygao/Desktop/CS 5610/MA2/project2/jiayi-gao-project2/src/component/Easy.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext } from 'react';\nimport { boardDefault } from './Words';\nimport Board from './Board';\nimport Navigation from './Navigation';\nimport Keyboard from './Keyboard';\nimport '../App.css';\nimport Toast from 'react-bootstrap/Toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EasyContext = /*#__PURE__*/createContext();\nexport default function Easy() {\n  _s();\n\n  const [board, setBoard] = useState(boardDefault);\n  const [currTry, setCurrTry] = useState({\n    noOfAttempt: 0,\n    letterPos: 0\n  });\n  const [sentense, setSentense] = useState(\"Everything looks good :)\");\n  const [show, setShow] = useState(true);\n\n  const toggleShow = () => setShow(!show);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(EasyContext.Provider, {\n      value: {\n        board,\n        setBoard,\n        currTry,\n        setCurrTry,\n        sentense,\n        setSentense\n      },\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-layout\",\n        children: [/*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column-layout\",\n          children: [/*#__PURE__*/_jsxDEV(Keyboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Toast, {\n            show: show,\n            onClose: toggleShow,\n            children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                className: \"me-auto\",\n                children: \"Here is some suggestions you might need. Simply close it if you don't want any.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n              children: sentense\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Easy, \"brn26rSrUSQUYm8N3k3pxo0WHNg=\");\n\n_c = Easy;\n\nvar _c;\n\n$RefreshReg$(_c, \"Easy\");","map":{"version":3,"sources":["/Users/lilygao/Desktop/CS 5610/MA2/project2/jiayi-gao-project2/src/component/Easy.jsx"],"names":["React","useState","createContext","boardDefault","Board","Navigation","Keyboard","Toast","EasyContext","Easy","board","setBoard","currTry","setCurrTry","noOfAttempt","letterPos","sentense","setSentense","show","setShow","toggleShow"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,aAAzB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,EAAjC;AAEP,eAAe,SAASO,IAAT,GAAgB;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACE,YAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC;AAACa,IAAAA,WAAW,EAAE,CAAd;AAAiBC,IAAAA,SAAS,EAAE;AAA5B,GAAD,CAAtC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,0BAAD,CAAxC;AAEA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,IAAD,CAAhC;;AACA,QAAMmB,UAAU,GAAG,MAAMD,OAAO,CAAC,CAACD,IAAF,CAAhC;;AAEA,sBACI;AAAA,2BACI,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAI;AAACR,QAAAA,KAAD;AAAQC,QAAAA,QAAR;AAAkBC,QAAAA,OAAlB;AAA2BC,QAAAA,UAA3B;AAAuCG,QAAAA,QAAvC;AAAiDC,QAAAA;AAAjD,OAA/B;AAAA,8BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAG,YAAjB;AAAA,gCACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAG,eAAjB;AAAA,kCACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEC,IAAb;AAAmB,YAAA,OAAO,EAAEE,UAA5B;AAAA,oCACI,QAAC,KAAD,CAAO,MAAP;AAAA,qCACI;AAAQ,gBAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAOI,QAAC,KAAD,CAAO,IAAP;AAAA,wBAAaJ;AAAb;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GAhCuBP,I;;KAAAA,I","sourcesContent":["import React, {useState, createContext} from 'react';\nimport { boardDefault } from './Words';\nimport Board from './Board';\nimport Navigation from './Navigation';\nimport Keyboard from './Keyboard';\nimport '../App.css';\nimport Toast from 'react-bootstrap/Toast';\n\nexport const EasyContext = createContext();\n\nexport default function Easy() {\n\n    const [board, setBoard] = useState(boardDefault);\n    const [currTry, setCurrTry] = useState({noOfAttempt: 0, letterPos: 0});\n    const [sentense, setSentense] = useState(\"Everything looks good :)\");\n\n    const [show, setShow] = useState(true);\n    const toggleShow = () => setShow(!show);\n\n    return (\n        <div>\n            <EasyContext.Provider value = {{board, setBoard, currTry, setCurrTry, sentense, setSentense}}>\n                <Navigation />\n                <div className = \"row-layout\">\n                    <Board />\n                    <div className = \"column-layout\">\n                        <Keyboard />\n                        <Toast show={show} onClose={toggleShow}>\n                            <Toast.Header>\n                                <strong className=\"me-auto\">\n                                    Here is some suggestions you might need.\n                                    Simply close it if you don't want any.\n                                </strong>\n                            </Toast.Header>\n                            <Toast.Body>{sentense}</Toast.Body>\n                        </Toast>\n                    </div>\n                </div>\n            </EasyContext.Provider>\n        </div>\n    )\n    \n}"]},"metadata":{},"sourceType":"module"}